{
	"name": "dataflow1",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "Ds_dl_df_incomingfile",
						"type": "DatasetReference"
					},
					"name": "source1"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "Ds_dl_df_RejectFile",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "derivedColumn1"
				},
				{
					"name": "aggregate1"
				},
				{
					"name": "filterForDuplicates"
				},
				{
					"name": "filterForNonDuplicates"
				}
			],
			"scriptLines": [
				"source(output(",
				"          ProductId as string,",
				"          Price as string,",
				"          guid as string,",
				"          StartDate as string,",
				"          EndDate as string,",
				"          CreateDate as string,",
				"          ModifiedDate as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> source1",
				"source1 derive(UniqueId = concat(ProductId,'-', guid)) ~> derivedColumn1",
				"derivedColumn1 aggregate(groupBy(UniqueId),",
				"     Rowcount = count(UniqueId)) ~> aggregate1",
				"aggregate1 filter(Rowcount > 1) ~> filterForDuplicates",
				"aggregate1 filter(Rowcount==1) ~> filterForNonDuplicates",
				"filterForDuplicates sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> sink1"
			]
		}
	}
}